import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
import matplotlib.pyplot as plt

#Import the flags csv and explore the data
flags = pd.read_csv('flags.csv')
print(flags.head())

#Assigning the data and labels
labels = flags[['Landmass']]
data = flags[["Red", "Green", "Blue", "Gold",
 "White", "Black", "Orange",
 "Circles",
"Crosses","Saltires","Quarters","Sunstars",
"Crescent","Triangle"]]

#splitting the set
data_train, data_validation, labels_train, labels_validation = train_test_split(data, labels, train_size = 0.8)

#Creating the Decisiontree classifier
#classifier = DecisionTreeClassifier()

#Training the model
#classifier.fit(data_train, labels_train)

#Printing the score of the model 
#print(classifier.score(data_validation, labels_validation))

#Tuning the model - finding the best max_depth of the tree
scores = []
for i in range(1,21):
  classifier = DecisionTreeClassifier(random_state = 3, max_depth = i)
  classifier.fit(data_train, labels_train)
  scores.append(classifier.score(data_validation, labels_validation))

plt.plot(range(1,21), scores)
plt.show()
